allprojects {
	apply plugin: 'java'
	apply plugin: 'maven'
	apply plugin: 'eclipse'

	def defaultEncoding = 'UTF-8'
	[compileJava, compileTestJava]*.options*.encoding = defaultEncoding

	version = '1.0'
	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	repositories {
		mavenCentral()
		jcenter()
		maven { url 'http://repo.spring.io/release' }
		maven { url 'http://repo.spring.io/snapshot' }
		maven { url 'http://repo.spring.io/milestone' }
		maven { url 'http://maven.seasar.org/maven2/' }
	}

	test {
		systemProperties 'property': 'value'
	}
}

buildscript {
	repositories { jcenter() }
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
	}
}

apply plugin: 'war'
apply plugin: 'spring-boot' // http://docs.spring.io/spring-boot/docs/current/reference/html/build-tool-plugins-gradle-plugin.html
apply plugin: 'pmd'
apply plugin: 'jacoco'

def SPRING_GROUPID = 'org.springframework'
def SPRING_BOOT_GROUP_ID = 'org.springframework.boot'
def SPRING_VERSION = '4.1.6.RELEASE'
def SPRING_SECURITY_VERSION = '4.0.1.RELEASE'
def ASPECTJ_VERSION = '1.8.5'
def LOGBACK_VERSION = '1.1.3'
dependencies {

	compile project(':flutist-common')

	// Settings providedCompile
	providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
	// Settings Base
	compile (group: SPRING_BOOT_GROUP_ID, name: 'spring-boot-starter-web', version: '1.3.0.BUILD-SNAPSHOT') {
//		exclude module: 'hibernate-validator'
	}
//	compile group: SPRING_GROUPID, name: 'spring-context', version: SPRING_VERSION
//	compile group: SPRING_GROUPID, name: 'spring-web', version: SPRING_VERSION
//	compile group: SPRING_GROUPID, name: 'spring-webmvc', version: SPRING_VERSION
//	compile group: 'org.springframework.security', name: 'spring-security-core', version: SPRING_SECURITY_VERSION
//	compile group: 'org.springframework.security', name: 'spring-security-web', version: SPRING_SECURITY_VERSION
//	compile group: 'org.springframework.security', name: 'spring-security-config', version: SPRING_SECURITY_VERSION
	compile group: 'org.thymeleaf', name: 'thymeleaf-spring4', version: '2.1.4.RELEASE'
	compile group: 'nz.net.ultraq.thymeleaf', name: 'thymeleaf-layout-dialect', version: '1.2.8'
	compile group: 'org.projectlombok', name: 'lombok', version: '1.16.4'
	// Settings Database
	compile group: SPRING_GROUPID, name: 'spring-jdbc', version: SPRING_VERSION
	compile group: SPRING_GROUPID, name: 'spring-tx', version: SPRING_VERSION
	compile group: 'org.apache.tomcat', name: 'tomcat-jdbc', version: '8.0.18'
	compile group: 'org.dbflute', name: 'dbflute-runtime', version: '1.1.0-sp3'
	compile group: 'com.h2database', name: 'h2', version: '1.4.187'
	// Settings Logging
//	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.11'
	compile group: 'ch.qos.logback', name: 'logback-classic', version: LOGBACK_VERSION
	compile group: 'ch.qos.logback', name: 'logback-core', version: LOGBACK_VERSION
	// Settings AOP
	compile group: 'org.aspectj', name: 'aspectjrt', version: ASPECTJ_VERSION
	compile group: 'org.aspectj', name: 'aspectjweaver', version: ASPECTJ_VERSION
	// Settings Other
	compile group: 'org.apache.httpcomponents', name: 'fluent-hc', version: '4.4.1'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.6.0-rc1'

	// Settings Test
	testCompile group: 'junit', name: 'junit', version: '4.+'
	testCompile group: SPRING_GROUPID, name: 'spring-test', version: SPRING_VERSION
	testCompile group: SPRING_BOOT_GROUP_ID, name: 'spring-boot-starter-test', version: '1.2.3.RELEASE'
}

jar {
	manifest {
		attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
	}
}

war {
	webAppDirName = 'WebContent'
}

uploadArchives {
	repositories {
		flatDir {
			dirs 'repos'
		}
	}
}

pmd {
	toolVersion = '5.1.2'
	ignoreFailures = true
	sourceSets = [sourceSets.main]
	reportsDir = file("$project.buildDir/reports/pmd")
	ruleSets = [
		'java-basic',
		'java-strings',
		'java-braces'
	]
}
pmdMain {
	excludes = ["**/org/seasar/**/*.java", "**/org/doxer/app/db/dbflute/**/*.java"]
}

jacocoTestReport {
	reports {
		xml.enabled true
	}
}

check << {
	File outDir = new File('build/reports/pmd/')
	outDir.mkdirs()
	ant.taskdef(name: 'cpd', classname: 'net.sourceforge.pmd.cpd.CPDTask',
		classpath: configurations.pmd.asPath)
	ant.cpd(minimumTokenCount: '100', format: 'xml',
		outputFile: new File(outDir, 'cpd.xml'))
	{
		fileset(dir: 'src/main/java') {
			include(name: '**/*.java')
		}
	}
}
